import Head from "next/head";
import Image from "next/image";
import { useEffect, useRef } from "react";
import styles from "../styles/Home.module.css";
import { supabase } from "../utils/supabaseClient";

const channelId = 'r'
const channelIds = ["hollow",
"easier",
"behavior",
"occasionally",
"western",
"equipment",
"living",
"period",
"fish",
"right",
"later",
"foot",
"hand",
"locate",
"rear",
"under",
"eat",
"gone"]

const databaseFilter = {
  schema: "public",
  table: "messages",
  // filter: `room_id=eq.${channelId}`,
  // filter: `room_id=contains.${channelIds}`,
  event: "INSERT",
};

export default function Home() {

  const mountedRef = useRef(false)
  
  useEffect(() => {
    
    if(mountedRef.current) {

      const receivedDatabaseEvent = (event) => {
        console.log(event.new)
      }

      // user rooms
      channelIds.map(channel => {
        supabase
        .channel(channel)
        .on("postgres_changes", {
          schema: "public",
          table: "messages",
          filter: `room_id=eq.${channel}`,
          event: "INSERT",
        }, (payload) =>
          receivedDatabaseEvent(payload)
        )
        .subscribe();
      })
  
      // const channel = supabase
      //   .channel(channelId)
      //   .on("postgres_changes", databaseFilter, (payload) =>
      //     receivedDatabaseEvent(payload)
      //   )
      //   .subscribe();
  
        // supabase
        // .channel('*')
        // .on('postgres_changes', databaseFilter, payload => {
        //   console.log('Change received!', payload)
        // })
        // .subscribe()

        const channel = supabase.channel('online-users', {
          config: {
            presence: {
              key: 'user' + (Math.floor(Math.random() * (5 - 1 + 1)) + 1),
            },
          },
        })
        
        channel.on('presence', { event: 'sync' }, () => {
          console.log('Online users: ', channel.presenceState())
        })

        // Presence event handlers setup
        
        channel.subscribe(async (status) => {
          if (status === 'SUBSCRIBED') {
            const status = await channel.track({ online_at: new Date().toISOString() })
            console.log(status)
          }
        })
    }

    

    return () => {
      mountedRef.current = true;
      // supabase.removeAllChannels();
    };
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>john</main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
